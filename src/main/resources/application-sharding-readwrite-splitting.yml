spring:
  shardingsphere:
#    mode:
#      type: Cluster # 集群模式
#      overwrite: true # 是否使用本地配置覆盖持久化配置
#      repository:
#        type: ZooKeeper
#        props: {
#          "namespace": "sharding-demo",
#          "server-lists": "ubuntu:2181",
#        }
    rules:
      readwrite-splitting: # 读写分离配置
        data-sources: {
          "ds-0": {
            "type": "Static",
            "props": {
              "write-data-source-name": "write-ds-0",
              "read-data-source-names": "write-ds-0-read-0, write-ds-0-read-1"
            }
          },
          "ds-1": {
            "type": "Static",
            "props": {
              "write-data-source-name": "write-ds-1",
              "read-data-source-names": "write-ds-1-read-0, write-ds-1-read-1"
            }
          }
        }
      sharding:
        binding-tables: # 绑定表
          - user,user_history
        broadcast-tables: # 广播表
          - gender
        default-database-strategy: # 默认分库策略
          standard:
            sharding-column: uid
            sharding-algorithm-name: database-inline
        default-key-generate-strategy: # 默认主键生成策略
          column: uid
          key-generator-name: snowflake
        tables: {
          "user": {
            "actual-data-nodes": "ds-$->{0..1}.user_$->{0..3}",
            "key-generate-strategy": {
              "column": "uid",
              "key-generator-name": "snowflake"
            },
            "table-strategy": {
              "standard": {
                "sharding-column": "uid",
                "sharding-algorithm-name": "uid-inline"
              }
            }
          },
          "user_history": {
            "actual-data-nodes": "ds-$->{0..1}.user_history_$->{0..3}",
            "key-generate-strategy": {
              "column": "id",
              "key-generator-name": "snowflake"
            },
            "table-strategy": {
              "standard": {
                "sharding-column": "uid",
                "sharding-algorithm-name": "user-history-inline"
              }
            }
          }
        }
        sharding-algorithms: { # 分片策略
          "database-inline": {
            "type": "INLINE" ,
            "props": {
              "algorithm-expression": "ds-$->{uid % 2}"
            }
          },
          "uid-inline": {
            "type": "INLINE" ,
            "props": {
              "algorithm-expression": "user_$->{uid % 4}"
            }
          },
          "user-history-inline": {
            "type": "INLINE" ,
            "props": {
              "algorithm-expression": "user_history_$->{uid % 4}"
            }
          }
        }
        key-generators: { # 主键生成策略配置
          "snowflake": {
            "type": "SNOWFLAKE",
            "props": {
              "max-vibration-offset": 3
            }
          }
        }

    ################### 数据源配置
    datasource.names: write-ds-0,write-ds-1,write-ds-0-read-0,write-ds-0-read-1,write-ds-1-read-0,write-ds-1-read-1
    datasource: {
      "write-ds-0": {
        "jdbc-url": "jdbc:mysql://ubuntu:3306/demo?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true",
        "type": "com.zaxxer.hikari.HikariDataSource",
        "driver-class-name": "com.mysql.cj.jdbc.Driver",
        "username": "root",
        "password": "1234",
        "max-active": 16
      },
      "write-ds-0-read-0": {
        "jdbc-url": "jdbc:mysql://ubuntu:3306/demo?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true",
        "type": "com.zaxxer.hikari.HikariDataSource",
        "driver-class-name": "com.mysql.cj.jdbc.Driver",
        "username": "read_only",
        "password": "1234",
        "max-active": 16
      },
      "write-ds-0-read-1": {
        "jdbc-url": "jdbc:mysql://ubuntu:3306/demo?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true",
        "type": "com.zaxxer.hikari.HikariDataSource",
        "driver-class-name": "com.mysql.cj.jdbc.Driver",
        "username": "read_only1",
        "password": "1234",
        "max-active": 16
      },
      "write-ds-1": {
        "jdbc-url": "jdbc:mysql://ubuntu:3307/demo?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true",
        "type": "com.zaxxer.hikari.HikariDataSource",
        "driver-class-name": "com.mysql.cj.jdbc.Driver",
        "username": "root",
        "password": "1234",
        "max-active": 16
      },
      "write-ds-1-read-0": {
        "jdbc-url": "jdbc:mysql://ubuntu:3307/demo?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true",
        "type": "com.zaxxer.hikari.HikariDataSource",
        "driver-class-name": "com.mysql.cj.jdbc.Driver",
        "username": "read_only",
        "password": "1234",
        "max-active": 16
      },
      "write-ds-1-read-1": {
        "jdbc-url": "jdbc:mysql://ubuntu:3307/demo?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true",
        "type": "com.zaxxer.hikari.HikariDataSource",
        "driver-class-name": "com.mysql.cj.jdbc.Driver",
        "username": "read_only1",
        "password": "1234",
        "max-active": 16
      },
    }
    props:
      sql:
        show: true